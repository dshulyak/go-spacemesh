// Code generated by github.com/spacemeshos/go-scale/scalegen. DO NOT EDIT.

package peersync

import (
	"github.com/spacemeshos/go-scale"
)

func (t *Request) EncodeScale(enc *scale.Encoder) (total int, err error) {
	if n, err := scale.EncodeCompact64(enc, uint64(t.ID)); err != nil {
		return total, err
	} else {
		total += n
	}
	return total, nil
}

func (t *Request) DecodeScale(dec *scale.Decoder) (total int, err error) {
	if field, n, err := scale.DecodeCompact64(dec); err != nil {
		return total, err
	} else {
		total += n
		t.ID = uint64(field)
	}
	return total, nil
}

func (t *Response) EncodeScale(enc *scale.Encoder) (total int, err error) {
	if n, err := scale.EncodeCompact64(enc, uint64(t.ID)); err != nil {
		return total, err
	} else {
		total += n
	}
	if n, err := scale.EncodeCompact64(enc, uint64(t.Timestamp)); err != nil {
		return total, err
	} else {
		total += n
	}
	return total, nil
}

func (t *Response) DecodeScale(dec *scale.Decoder) (total int, err error) {
	if field, n, err := scale.DecodeCompact64(dec); err != nil {
		return total, err
	} else {
		total += n
		t.ID = uint64(field)
	}
	if field, n, err := scale.DecodeCompact64(dec); err != nil {
		return total, err
	} else {
		total += n
		t.Timestamp = uint64(field)
	}
	return total, nil
}

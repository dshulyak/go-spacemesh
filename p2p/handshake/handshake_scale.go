// Code generated by github.com/spacemeshos/go-scale/scalegen. DO NOT EDIT.

package handshake

import (
	"github.com/spacemeshos/go-scale"
)

func (t *HandshakeMessage) EncodeScale(enc *scale.Encoder) (total int, err error) {
	if n, err := scale.EncodeCompact32(enc, uint32(t.Network)); err != nil {
		return total, err
	} else {
		total += n
	}
	return total, nil
}

func (t *HandshakeMessage) DecodeScale(dec *scale.Decoder) (total int, err error) {
	if field, n, err := scale.DecodeCompact32(dec); err != nil {
		return total, err
	} else {
		total += n
		t.Network = uint32(field)
	}
	return total, nil
}

func (t *HandshakeAck) EncodeScale(enc *scale.Encoder) (total int, err error) {
	if n, err := scale.EncodeString(enc, t.Error); err != nil {
		return total, err
	} else {
		total += n
	}
	return total, nil
}

func (t *HandshakeAck) DecodeScale(dec *scale.Decoder) (total int, err error) {
	if field, n, err := scale.DecodeString(dec); err != nil {
		return total, err
	} else {
		total += n
		t.Error = field
	}
	return total, nil
}
